
<EditForm Model="@Category" OnValidSubmit="SaveAsync">
    <MudGrid>
        <MudItem xs="12" md="12">
            <MudPaper Class="pa-3 ma-1">

                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Send" Color="Color.Success">Сохранить</MudButton>

                <MudButton Href="customers" Variant="Variant.Text">Отмена</MudButton>
            </MudPaper>
        </MudItem>
    </MudGrid>
    <MudGrid>
        <MudItem xs="12" md="12">
            <MudPaper Class="pa-16 ma-1">

                <MudGrid>
                    <MudItem xs="12" sm="6" md="4">
                        <MudTextField T="string" Label="Называние категории"
                                      Variant="@variant" @bind-Text="@Category.Name"
                                      For="@(() => Category.Name)" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4">
                        <MudTextField T="string" Label="Описание"
                                      Variant="variant" @bind-Text="@Category.Description"
                                      For="@(() => Category.Description)" />
                    </MudItem>
                   
                    <MudItem xs="12" sm="6" md="4">
                        <img src="data:image/png;base64, @Category.PhotoCategoryBase64" alt="Category Icon" style="width: 100px; height: 100px; margin-bottom: 3px; margin-right: 5px;" />
                        <MudFileUpload T="IBrowserFile" Context="fileInput" FilesChanged="UploadFiles">
                            <ButtonTemplate>
                                <MudButton HtmlTag="label"
                                           Variant="Variant.Filled"
                                           Color="Color.Primary"
                                           StartIcon="@Icons.Material.Filled.CloudUpload"
                                           for="@fileInput">
                                    Загрузить фото
                                </MudButton>
                            </ButtonTemplate>
                        </MudFileUpload>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4">
                        @if (files != null)
                        {
                            <h3>@files.Name</h3>
                        }
                    </MudItem>
                </MudGrid>
            </MudPaper>
        </MudItem>
    </MudGrid>
</EditForm>

@using ISTUDIO.Contracts.Features.Categories
@code {
    [Parameter] public EditCategoriesVM Category { get; set; } = new();
    [Parameter] public EventCallback<EditCategoriesVM> OnSave { get; set; }
    private Variant variant = Variant.Text;
    private IBrowserFile files { get; set; }
    private async Task UploadFiles(IBrowserFile file)
    {
        files = file;
        Category.PhotoCategoryBase64 = await ConvertFileToBase64(files);
    }
    private async Task SaveAsync()
    {
        if (files != null)
        {
            Category.PhotoCategoryBase64 = await ConvertFileToBase64(files);
        }
        await OnSave.InvokeAsync(Category);
    }

    private async Task<string> ConvertFileToBase64(IBrowserFile file)
    {
        using (var stream = file.OpenReadStream())
        using (var memoryStream = new MemoryStream())
        {
            await stream.CopyToAsync(memoryStream);
            var bytes = memoryStream.ToArray();
            return Convert.ToBase64String(bytes);
        }
    }
}
